//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project.CodeGeneration {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Project.CodeGeneration.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import { Action } from &apos;@ngrx/store&apos;;
        ///import { {0}Model } from &apos;../../model/{1}.model&apos;;
        ///import { OkModel } from &apos;../../model/ok.model&apos;;
        ///
        ///export const GETALL{2}S_ACTION = &quot;getAll{0}s&quot;;
        ///export const {2}SLOADED_ACTION = &quot;{0}sLoaded&quot;;
        ///export const DELETE{2}_ACTION = &quot;Delete{0}&quot;;
        ///export const DELETED{2}_ACTION = &quot;Deleted{0}&quot;;
        ///export const EDIT{2}_ACTION = &quot;Edit{0}&quot;;
        ///export const EDIT{2}LOADED_ACTION = &quot;Edit{0}Loaded&quot;;
        ///export const POST{2}_ACTION = &quot;Post{0}Loaded&quot;;
        ///export const PUT{2}_ACTION = &quot;Put{0}L [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ClientAppActions {
            get {
                return ResourceManager.GetString("ClientAppActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import { Injectable } from &quot;@angular/core&quot;;
        ///import { Actions, Effect, ofType } from &quot;@ngrx/effects&quot;;
        ///import * as ActionsList from &apos;../store/actions/{1}.actions&apos;;
        ///import { {0}Service } from &quot;../services/{1}.services&quot;;
        ///import { map, exhaustMap, catchError, switchMap } from &apos;rxjs/operators&apos;;
        ///import { Observable } from &apos;rxjs&apos;;
        ///import { Store } from &apos;@ngrx/store&apos;;
        ///import { mergeMap } from &quot;rxjs/operator/mergeMap&quot;;
        ///import { of } from &quot;rxjs/Observable/of&quot;;
        ///
        ///@Injectable()
        ///export class {0}sEffects {
        ///  co [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ClientAppEffects {
            get {
                return ResourceManager.GetString("ClientAppEffects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to export class {0}Model {
        ///  id: string = null;
        ///}.
        /// </summary>
        public static string ClientAppModel {
            get {
                return ResourceManager.GetString("ClientAppModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import { Action } from &apos;@ngrx/store&apos;;
        ///import * as Actions from &apos;../actions/{1}.actions&apos;;
        ///import { I{0}ListState, {1}ListState } from &apos;../state/{1}-list.state&apos;;
        ///import { {1}EditState, I{0}EditState } from &apos;../state/{1}-edit.state&apos;;
        ///import { {0}Model } from &apos;../../model/{1}.model&apos;;
        ///
        ///export function {1}EditReducer(state = {1}EditState, action: Actions.{0}EditActions): I{0}EditState {
        ///  switch (action.type) {
        ///    case Actions.EDIT{2}_ACTION:
        ///      return {
        ///        ...state,
        ///      }
        ///
        ///    case Action [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ClientAppReducerEdit {
            get {
                return ResourceManager.GetString("ClientAppReducerEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import { Action } from &apos;@ngrx/store&apos;;
        ///import * as Actions from &apos;../actions/{1}.actions&apos;;
        ///import { I{0}ListState, {1}ListState } from &apos;../state/{1}-list.state&apos;;
        ///
        ///export function {1}ListReducer(state = {1}ListState, action: Actions.{0}ListActions): I{0}ListState {
        ///  switch (action.type) {
        ///    case Actions.{2}SLOADED_ACTION:
        ///      return {
        ///        ...state,
        ///        list: action.payload,
        ///      }
        ///
        ///    case Actions.DELETED{2}_ACTION:
        ///      return {
        ///        ...state,
        ///        deleted{0}: action.paylo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ClientAppReducerList {
            get {
                return ResourceManager.GetString("ClientAppReducerList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import { AppState } from &quot;../state/app.state&quot;;
        ///import { createSelector } from &quot;@ngrx/store&quot;;
        ///import { I{0}ListState } from &quot;../state/{1}-list.state&quot;;
        ///import { I{0}EditState } from &quot;../state/{1}-edit.state&quot;;
        ///
        ///export const get{0}List = (state: AppState) =&gt; state.{1}ListState;
        ///export const get{0}Edit = (state: AppState) =&gt; state.{1}EditState;
        ///
        ///export const get{0}List_List = createSelector(
        ///  get{0}List,
        ///  (state: I{0}ListState) =&gt; state.list
        ///);
        ///
        ///export const get{0}List_ItemDeleted = createSelector [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ClientAppSelector {
            get {
                return ResourceManager.GetString("ClientAppSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import { Injectable } from &apos;@angular/core&apos;;
        ///import { HttpClient, HttpParams } from &apos;@angular/common/http&apos;;
        ///import { Observable } from &apos;rxjs/Observable&apos;;
        ///import { Store } from &apos;@ngrx/store&apos;;
        ///import { catchError, map } from &apos;rxjs/operators&apos;;
        ///import { LoggedInAction, NotLoggedInAction } from &apos;../store/actions/account.actions&apos;;
        ///import { ShowErrorAction } from &apos;../store/actions/util.actions&apos;;
        ///import { MatSnackBar } from &apos;@angular/material&apos;;
        ///import { AppComponent } from &apos;../app.component&apos;;
        ///import { BaseS [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ClientAppService {
            get {
                return ResourceManager.GetString("ClientAppService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import { LoggedInModel } from &quot;../../model/loggedIn.model&quot;;
        ///import { {0}Model } from &quot;../../model/{1}.model&quot;;
        ///
        ///export interface I{0}EditState {
        ///  {1}: {0}Model,
        ///}
        ///
        ///export const {1}EditState: I{0}EditState = {
        ///  {1}: null,
        ///}
        ///.
        /// </summary>
        public static string ClientAppStateEdit {
            get {
                return ResourceManager.GetString("ClientAppStateEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;form novalidate *ngIf=&quot;{1} | async; let item&quot;&gt;
        ///
        ///  &lt;!--&lt;mat-form-field class=&quot;form-full-width block&quot;&gt;
        ///    &lt;mat-label&gt;Name&lt;/mat-label&gt;
        ///    &lt;input type=&quot;text&quot; matInput name=&quot;item.name&quot; [(ngModel)]=&quot;item.name&quot; /&gt;
        ///  &lt;/mat-form-field&gt;--&gt;
        ///
        ///  &lt;button type=&quot;submit&quot; (click)=&quot;save(item)&quot; mat-button mat-raised-button&gt;Save&lt;/button&gt;
        ///
        ///&lt;/form&gt;
        ///.
        /// </summary>
        public static string ComponentEditHTML {
            get {
                return ResourceManager.GetString("ComponentEditHTML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string ComponentEditLESS {
            get {
                return ResourceManager.GetString("ComponentEditLESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import { Component, OnInit, OnDestroy } from &apos;@angular/core&apos;;
        ///import { Component, OnInit, OnDestroy } from &apos;@angular/core&apos;;
        ///import { {0}Model } from &apos;../../../model/{1}.model&apos;;
        ///import { Edit{0}Action, Post{0}Action, Put{0}Action, Edit{0}ResetAction } from &apos;../../../store/actions/{1}.actions&apos;;
        ///import { Store, select } from &apos;@ngrx/store&apos;;
        ///import { AppState } from &apos;../../../store/state/app.state&apos;;
        ///import { ActivatedRoute, Router } from &apos;@angular/router&apos;;
        ///import { Subscription, Observable } from &apos;rxjs&apos;;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ComponentEditTS {
            get {
                return ResourceManager.GetString("ComponentEditTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;h1&gt;{0}&lt;/h1&gt;
        ///&lt;button mat-button (click)=&quot;newItem()&quot;&gt;Add new&lt;/button&gt;
        ///
        ///&lt;div class=&quot;container-fluid&quot;&gt;
        ///  &lt;div id=&quot;{1}List&quot; class=&quot;row-fluid list-container&quot; *ngFor=&quot;let {1} of dataSource | async;let i = index;&quot;&gt;
        ///
        ///    &lt;div class=&quot;col-md-6 left-style&quot; *ngIf=&quot;i%2 == 0&quot;&gt;
        ///      &lt;app-{1}item class=&quot;card-item&quot; [{1}]=&quot;{1}&quot;&gt;&lt;/app-exerciseitem&gt;
        ///    &lt;/div&gt;
        ///
        ///    &lt;div class=&quot;col-md-6 right-style&quot; *ngIf=&quot;i%2 != 0&quot;&gt;
        ///      &lt;app-{1}item class=&quot;card-item&quot; [{1}]=&quot;{1}&quot;&gt;&lt;/app-{1}item&gt;
        ///    &lt;/div&gt;
        ///
        ///  &lt;/div&gt;
        ///&lt;/div&gt;
        ///&lt;di [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ComponentListHTML {
            get {
                return ResourceManager.GetString("ComponentListHTML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;h1&gt;{0}&lt;/h1&gt;
        ///&lt;button mat-button (click)=&quot;newItem()&quot;&gt;Add new&lt;/button&gt;
        ///
        ///&lt;div class=&quot;container-fluid&quot;&gt;
        ///  &lt;div id=&quot;{1}List&quot; class=&quot;row-fluid list-container&quot; *ngFor=&quot;let {1} of dataSource | async;let i = index;&quot;&gt;
        ///
        ///    &lt;div class=&quot;col-md-6 left-style&quot; *ngIf=&quot;i%2 == 0&quot;&gt;
        ///      &lt;app-{1}item class=&quot;card-item&quot; [{1}]=&quot;{1}&quot;&gt;&lt;/app-exerciseitem&gt;
        ///    &lt;/div&gt;
        ///
        ///    &lt;div class=&quot;col-md-6 right-style&quot; *ngIf=&quot;i%2 != 0&quot;&gt;
        ///      &lt;app-{1}item class=&quot;card-item&quot; [{1}]=&quot;{1}&quot;&gt;&lt;/app-{1}item&gt;
        ///    &lt;/div&gt;
        ///
        ///  &lt;/div&gt;
        ///&lt;/div&gt;
        ///&lt;di [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ComponentListItemHTML {
            get {
                return ResourceManager.GetString("ComponentListItemHTML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string ComponentListItemLESS {
            get {
                return ResourceManager.GetString("ComponentListItemLESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import { Component, OnInit, OnDestroy } from &apos;@angular/core&apos;;
        ///import { Component, OnInit, OnDestroy } from &apos;@angular/core&apos;;
        ///import { {0}Model } from &apos;../../../model/{1}.model&apos;;
        ///import { Edit{0}Action, Post{0}Action, Put{0}Action, Edit{0}ResetAction } from &apos;../../../store/actions/{1}.actions&apos;;
        ///import { Store, select } from &apos;@ngrx/store&apos;;
        ///import { AppState } from &apos;../../../store/state/app.state&apos;;
        ///import { ActivatedRoute, Router } from &apos;@angular/router&apos;;
        ///import { Subscription, Observable } from &apos;rxjs&apos;;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ComponentListItemTS {
            get {
                return ResourceManager.GetString("ComponentListItemTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string ComponentListLESS {
            get {
                return ResourceManager.GetString("ComponentListLESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import { Component, OnInit, OnDestroy } from &apos;@angular/core&apos;;
        ///import { Component, OnInit, OnDestroy } from &apos;@angular/core&apos;;
        ///import { {0}Model } from &apos;../../../model/{1}.model&apos;;
        ///import { Edit{0}Action, Post{0}Action, Put{0}Action, Edit{0}ResetAction } from &apos;../../../store/actions/{1}.actions&apos;;
        ///import { Store, select } from &apos;@ngrx/store&apos;;
        ///import { AppState } from &apos;../../../store/state/app.state&apos;;
        ///import { ActivatedRoute, Router } from &apos;@angular/router&apos;;
        ///import { Subscription, Observable } from &apos;rxjs&apos;;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ComponentListTS {
            get {
                return ResourceManager.GetString("ComponentListTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace Project.Repository
        ///{
        ///    using Project.Models;
        ///
        ///    public interface I{0}Repository : IRepository&lt;{0}&gt;
        ///    {
        ///    }
        ///}
        ///.
        /// </summary>
        public static string ContractRepository {
            get {
                return ResourceManager.GetString("ContractRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Project.Models;
        ///
        ///namespace Project.BLL.Contracts
        ///{
        ///    public interface I{0}Service : IBaseService&lt;{0}&gt;
        ///    {
        ///        
        ///    }
        ///}
        ///.
        /// </summary>
        public static string ContractService {
            get {
                return ResourceManager.GetString("ContractService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Microsoft.AspNetCore.Authorization;
        ///using Microsoft.AspNetCore.Mvc;
        ///using Project.Web.Builder.{0};
        ///using Project.Web.DTO;
        ///using MongoDB.Bson;
        ///using System.Collections.Generic;
        ///
        ///namespace Project.Web.Controllers.API
        ///{
        ///    //[ValidateAntiForgeryToken]
        ///    [Authorize]
        ///    [Route(&quot;api/{0}/[action]&quot;)]
        ///    public class {0}Controller : BaseApiController
        ///    {
        ///        public {0}Controller(Config.DataContext context)
        ///            : base(context)
        ///        {
        ///        }
        ///
        ///		[HttpGet] [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Controller {
            get {
                return ResourceManager.GetString("Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using MongoDB.Driver;
        ///using Project.Models;
        ///using Project.Utils.Helpers;
        ///
        ///namespace Project.Web.DTO.Converter
        ///{
        ///
        ///    public static partial class DtoToModel
        ///    {
        ///        public static {0} ToModel(this {0}DTO dto, {0} model, IMongoDatabase db)
        ///        {
        ///            if (model.IsNull())
        ///            {
        ///                return null;
        ///            }
        ///
        ///            return model;
        ///        }
        ///    }
        ///}.
        /// </summary>
        public static string DtoToModel {
            get {
                return ResourceManager.GetString("DtoToModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace Project.Web.Builder.{0}
        ///{
        ///	using Project.Web.Loader;
        ///	using MongoDB.Driver;
        ///	using Project.Web.Builder.Base;
        ///    using Project.BLL.Contracts;
        ///	using Project.Models;
        ///    using Project.BLL.Helper;
        ///
        ///    public class {0}DeleteByIdBuilder : BaseDeleteByIdBuilder&lt;I{0}Service, Project.Models.{0}, {0}DeleteByIdBuilder&gt;
        ///    {
        ///        public {0}DeleteByIdBuilder(IMongoDatabase db)
        ///            : base(ServiceLoader.Get{0}Service(db))
        ///        {
        ///        }
        ///
        ///		 protected override {0}DeleteByIdBuil [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ModelDeleteById {
            get {
                return ResourceManager.GetString("ModelDeleteById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace Project.Web.DTO
        ///{
        ///    using Project.Models;
        ///    using System;
        ///
        ///    public class {0}DTO : DTOModelBase
        ///    {
        ///        public {0}DTO()
        ///        {
        ///        }
        ///
        ///        public {0}DTO({0} model)
        ///            : base(model)
        ///        {
        ///        }
        ///    }
        ///}.
        /// </summary>
        public static string ModelDTO {
            get {
                return ResourceManager.GetString("ModelDTO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace Project.Web.Builder.{0}
        ///{
        ///    using MongoDB.Driver;
        ///    using Project.BLL.Contracts;
        ///    using Project.Web.DTO;
        ///    using Project.Web.Loader;
        ///    using Project.Web.Builder.Base;
        ///    using System.Collections.Generic;
        ///    using System.Linq;
        ///    using Project.Web.DTO.Converter;
        ///
        ///    public class {0}GetListBuilder : BaseGetListBuilder&lt;I{0}Service, Project.Models.{0}, {0}DTO, {0}GetListBuilder&gt;
        ///    {
        ///        public {0}GetListBuilder(IMongoDatabase db)
        ///            : base(ServiceLoader.Get{ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ModelGetAll {
            get {
                return ResourceManager.GetString("ModelGetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace Project.Web.Builder.{0}
        ///{
        ///	using Project.Web.DTO;
        ///	using Project.Web.DTO.Converter;
        ///	using Project.Web.Loader;
        ///	using Project.Web.Builder.Base;
        ///	using MongoDB.Driver;
        ///    using Project.BLL.Contracts;
        ///    using Project.Models;
        ///
        ///    public class {0}GetByIdBuilder : BaseGetByIdBuilder&lt;I{0}Service, Project.Models.{0}, {0}GetByIdBuilder&gt;
        ///    {
        ///        // private {0}Includes[] _includes = new {0}Includes[0];
        ///
        ///        public {0}GetByIdBuilder(IMongoDatabase db)
        ///            : base(ServiceLo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ModelGetById {
            get {
                return ResourceManager.GetString("ModelGetById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace Project.Web.Builder.{0}
        ///{
        ///	using Project.Web.DTO;
        ///	using Project.Web.DTO.Converter;
        ///	using Project.Web.Loader;
        ///	using Project.Web.Builder.Base;
        ///	using MongoDB.Driver;
        ///    using Project.BLL.Contracts;
        ///    using Project.Models;
        ///
        ///    public class {0}PostUpdateDataBuilder : BasePostUpdateDataBuilder&lt;I{0}Service, Project.Models.{0}, {0}DTO, {0}PostUpdateDataBuilder&gt;
        ///    {
        ///        public {0}PostUpdateDataBuilder(IMongoDatabase db)
        ///            : base(ServiceLoader.Get{0}Service(db))
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ModelPostUpdate {
            get {
                return ResourceManager.GetString("ModelPostUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using MongoDB.Driver;
        ///using Project.Models;
        ///using Project.Utils.Exceptions;
        ///using Project.Validation;
        ///
        ///namespace Project.Repository.Repository
        ///{
        ///    public class {0}Repository : BaseMongoRepository&lt;{0}&gt;, I{0}Repository
        ///    {
        ///        public override string CollectionName { get; } = &quot;{0}List&quot;;
        ///
        ///
        ///        public {0}Repository(IMongoDatabase db)
        ///            : base(db)
        ///        {
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        public static string ModelRepository {
            get {
                return ResourceManager.GetString("ModelRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BLL;
        ///using MongoDB.Driver;
        ///using Project.BLL.Contracts;
        ///using Project.Models;
        ///using Project.Utils.Helpers;
        ///using System;
        ///using System.Linq;
        ///using Project.Validation;
        ///using Project.Validation.Helper;
        ///
        ///namespace Project.BLL.Services
        ///{
        ///    public class {0}Service : ServiceBase&lt;{0}&gt;, I{0}Service
        ///    {
        ///        public {0}Service(IMongoDatabase db)
        ///            : base(ServiceLoader.Get{0}Repository(db))
        ///        {
        ///        }
        ///
        ///		 protected override void ValidateModel({0} entity)
        ///        {
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ModelService {
            get {
                return ResourceManager.GetString("ModelService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //
        ///// Generated Code
        ///// Do not change this file
        /////
        ///
        ///namespace BLL
        ///{
        ///    using MongoDB.Driver;
        ///    using Ninject;
        ///    using Ninject.Parameters;
        ///    using Project.Repository;
        ///    using Project.Repository.Repository;
        ///
        ///    internal static class KernelLoader
        ///    {
        ///        public static IKernel Kernel { get; set; }
        ///
        ///        static KernelLoader()
        ///        {
        ///            Kernel = new StandardKernel();
        ///           {0}
        ///            Kernel.Bind(typeof(IUserRepository&lt;&gt;)).To(typeof(UserRepository&lt;&gt;));        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ModelServiceLoader {
            get {
                return ResourceManager.GetString("ModelServiceLoader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Project.Models;
        ///using Project.Utils.Helpers;
        ///
        ///namespace Project.Web.DTO.Converter
        ///{
        ///    public static partial class ModelToDto
        ///    {
        ///        public static {0}DTO ToDto(this {0} model)
        ///        {
        ///            if (model.IsNull())
        ///            {
        ///                return null;
        ///            }
        ///
        ///            var dto = new {0}DTO(model)
        ///            {
        ///                
        ///            };
        ///
        ///            return dto;
        ///        }
        ///    }
        ///}.
        /// </summary>
        public static string ModelToDto {
            get {
                return ResourceManager.GetString("ModelToDto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace Project.Validation
        ///{
        ///    using FluentValidation;
        ///    using Project.Models;
        ///
        ///    public class {0}Validator : AbstractValidator&lt;{0}&gt;
        ///    {
        ///        public {0}Validator()
        ///        {
        ///            //RuleFor(x =&gt; x.XX).NotEmpty();
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        public static string ModelValidation {
            get {
                return ResourceManager.GetString("ModelValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //
        ///// Generated Code
        ///// Do not change this file
        /////
        ///
        ///namespace Project.Web.Loader
        ///{
        ///    using MongoDB.Driver;
        ///    using Ninject;
        ///    using Ninject.Parameters;
        ///    using Project.BLL.Contracts;
        ///    using Project.BLL.Services;
        ///    using Project.Models;
        ///
        ///    internal static class KernelLoader
        ///    {
        ///        public static IKernel Kernel { get; set; }
        ///
        ///        static KernelLoader()
        ///        {
        ///            Kernel = new StandardKernel();
        ///            {0}
        ///            Kernel.Bind(typeof(IUserService&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ModelWebLoader {
            get {
                return ResourceManager.GetString("ModelWebLoader", resourceCulture);
            }
        }
    }
}
